#!/usr/bin/env bash
# shellcheck disable=SC1090

# SPDX-License-Identifier: Apache-2.0
# Copyright (C) 2025 Marko Kungla
# See the LICENSE file for full licensing details.

# This file is subject to the Apache License Version 2.0, as stated in the LICENSE file
# at the time of creation. Check Git history for further details.

# -----------------------------------------------------------------------------
# Script Information
# -----------------------------------------------------------------------------
# Description: Download source code or binary for the specified version.
# Usage: ./download
# Author: Marko Kungla
# Created: 2025-02-02
# Dependencies: ./lib/asdf-godot.bash
# ScriptType: Required
# Notes:
# URL: https://asdf-vm.com/plugins/create.html#bin-download

# -----------------------------------------------------------------------------
# Example Usage
# -----------------------------------------------------------------------------
# ./download
#
# -----------------------------------------------------------------------------

#!/usr/bin/env bash
#
# type: required

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/asdf-godot.bash"

if [ $ASDF_INSTALL_TYPE != "version" ]; then
	fail "only ASDF_INSTALL_TYPE version is supported, got ASDF_INSTALL_TYPE=$ASDF_INSTALL_TYPE"
fi

# Call list_stable_versions and list_preleases_versions to check if ASDF_INSTALL_VERSION exists
stable_versions=$(list_stable_versions)
prelease_versions=$(list_preleases_versions)

# Variables to track where the version was found
found_in_stable="no"
found_in_prelease="no"

# Check if ASDF_INSTALL_VERSION is in stable versions
if echo "$stable_versions" | grep -q "$ASDF_INSTALL_VERSION"; then
	found_in_stable="yes"
fi

# Check if ASDF_INSTALL_VERSION is in pre-release versions
if echo "$prelease_versions" | grep -q "$ASDF_INSTALL_VERSION"; then
	found_in_prelease="yes"
fi

# Determine if the version was found in any list
if [ "$found_in_stable" == "no" ] && [ "$found_in_prelease" == "no" ]; then
	fail "ERROR: ASDF_INSTALL_VERSION ($ASDF_INSTALL_VERSION) not found in stable or pre-release versions."
fi

mkdir -p "$ASDF_DOWNLOAD_PATH"

download_filename="$(get_download_filename $ASDF_INSTALL_VERSION $found_in_prelease)"

# Output where the version was found
if [ "$found_in_stable" == "yes" ]; then
	download_stable_release "$ASDF_INSTALL_VERSION" "$download_filename"
elif [ "$found_in_prelease" == "yes" ]; then
	download_prerelease "$ASDF_INSTALL_VERSION" "$download_filename"
fi

downloaded_archive="$ASDF_DOWNLOAD_PATH/$download_filename"
echo "Extracting: $download_filename"
unzip "$downloaded_archive" -d "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $download_filename"
rm $downloaded_archive

platform=$(uname | tr '[:upper:]' '[:lower:]')

if [ "$platform" == "linux" ]; then
	arch=$(uname -m)
	extracted_bin_name="Godot_v${ASDF_INSTALL_VERSION}_${platform}.${arch}"
	mv "${ASDF_DOWNLOAD_PATH}/${extracted_bin_name}" "${ASDF_DOWNLOAD_PATH}/godot"
fi
